=media-breakpoint-up($name, $breakpoints: $grid-breakpoints)
  $min: breakpoint-min($name, $breakpoints)
  @if $min
    @media (min-width: $min)
      @content
  @else
    @content

=generate-utility($utility, $infix)
  $values: map-get($utility, values)

  // If the values are a list or string, convert it into a map
  @if type-of($values) == "string" or type-of(nth($values, 1)) != "list"
    $values: zip($values, $values)

  @each $value in $values
    $properties: map-get($utility, property)

    // Multiple properties are possible, for example with vertical or horizontal margins or paddings
    @if type-of($properties) == 'string'
      $properties: append((), $properties)

    +generate-utility-body($utility, $properties, $value, $infix)

=generate-utility-body($utility, $properties, $value, $infix)
  // Use custom class if present
  $property-class: map-get($utility, class)
  $property-class: if($property-class, $property-class, nth($properties, 1))

  // Don't prefix if value key is null (eg. with shadow class)
  $property-class-modifier: if(nth($value, 1), "-" + nth($value, 1), "")

  $value: nth($value, 2)

  .#{$property-class + $infix + $property-class-modifier}
    @for $i from 1 through length($properties)
      $property: nth($properties, $i)
      $val: $value
      @if type-of($value) == 'list' and length($properties) == length($value)
        $val: nth($value, $i)
      @if $val != false
        // Check if unimportant property exists.
        // This allows you to conditional skip
        // defining a property as important.
        $unimportant: map-get($utility, unimportant)
        #{$property}: $val if(index($unimportant, $property), null, !important)

// Utilities
@each $breakpoint in map-keys($grid-breakpoints)
  // Generate media query if needed
  +media-breakpoint-up($breakpoint)
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints)

    // Loop over each utility property
    @each $key, $utility in $utilities
      // The utility can be disabled with `false`, thus check if the utility is a map first
      // Only proceed if responsive media queries are enabled or if it's the base media query
      @if type-of($utility) == "map" and (map-get($utility, responsive) or $infix == "")
        +generate-utility($utility, $infix)